@using SkillsHub.Application.Helpers;
@using SkillsHub.Application.DTO;


@model IQueryable<Teacher>?

    <!-- Custom Stylesheet -->

            <!-- NAVBAR - Search, Filter, Sort -->
        <nav class="navbar navbar-expand-lg bg-light">
            <div class="container-fluid">
                <div class="collapse navbar-collapse" id="navbarSupportedContent" style="display:flex;grid-gap:20px">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <div class="input-group icons">
                                <div class="input-group-prepend">
                                    <span class="input-group-text bg-transparent border-0 pr-2 pr-sm-3" id="basic-addon1"><i class="mdi mdi-magnify"></i></span>
                                </div>
                                <input type="button" onchange="getTeachers()" value="Reset" class="form-control btn btn-primary"/>

                                <input type="search" onkeyup="getTeachers()" onchange="getTeachers()" id="searchParentName" class="form-control" placeholder="Search by parent name" aria-label="Search Dashboard"/>
                                <div class="drop-down d-md-none">
                                        <input type="text" class="form-control" placeholder="Search">
                                </div>
                            </div>
                        </li>
                        <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p>Cource:</p>
                            <select class="form-control" id="courcesNames" onchange="getTeachers()">
                                <option value="" selected>Все</option>
                            </select>
                        </li>
                        <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p style="white-space:nowrap">Order by:</p>
                            <select class="form-control" id="sort-select">
                                <option value="" selected>Date created</option>
                                <option value="">Count groups</option>
                            </select>
                        </li>
                        <li class="nav-item">
                            <input type="text" class="form-control" placeholder="2017-06-04" id="minDate" />
                        </li>
                        
                    </ul>
                </div>
            </div>
        </nav>



    <div >
        <div >

            <div class="row page-titles mx-0">
                <div class="col p-md-0">
                    <ol class="breadcrumb" style="display:flex;align-items:center">
                        <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                        <li class="breadcrumb-item active"><a href="javascript:void(0)">Home</a></li>
                    <li>
                        <div>
                            <a style="margin-left:20px" class="btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Action
                                </a>
                            
                            <ul class="dropdown-menu">
                                <form>
                                <li><a class="dropdown-item" href="#">Invite via email</a></li>
                                <li>

                                    <a class="dropdown-item" asp-action="Create" asp-controller="Account">Create new</a>
                                    
                                </li>
                                </form>
                                </ul>
                            
                        </div>
                    </li>
                    
                    </ol>
                </div>
            </div>

        @if (Model != null || Model.Count() != 0)   
        {        
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Teachers</h4>
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered zero-configuration">
                                    <thead>
                                        <tr>
                                            <th>Login</th>
                                            <th>Full Name</th>
                                            <th>Sex</th>
                                            <th>Phone</th>
                                            <th>Email</th>
                                                    <th>BirthDate and age</th>
                                            <th>Groups</th>
                                            <th>Total Lessons</th>
                                            <th>Month Lessons</th>
                                            <th>Calculated salary</th>
                                            <th>IsAdmin</th>
                                            <th>SourceFindCompany</th>
                                            <th>IsDeleted</th>
                                                <!--
                                                        <td>item.CalculatedSalary</td>
                                                        <td>item.IsAdmin</td>
                                                        <td>item.SourceFindCompany</td>
                                                        <td>item.IsDeleted</td>
                                                        -->
                                        </tr>
                                    </thead>
                                    <tbody id="tableBody"></tbody>
                                    <tfoot>
                                        <tr>
                                                    <th>Login</th>
                                                    <th>Full Name</th>
                                                    <th>Sex</th>
                                                    <th>Phone</th>
                                                    <th>Email</th>
                                                    <th>BirthDate and age</th>
                                                    <th>Groups</th>
                                                    <th>Total Lessons</th>
                                                    <th>Month Lessons</th>
                                                    <th>Calculated salary</th>
                                                    <th>IsAdmin</th>
                                                    <th>SourceFindCompany</th>
                                                    <th>IsDeleted</th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        }
        }

         <!-- #/ container -->
        </div>

    </div>

    <!--
    <script src="/plugins/common/common.min.js"></script>
    <script src="/js/custom.min.js"></script>
    <script src="/js/settings.js"></script>
    <script src="/js/gleek.js"></script>
    <script src="/js/styleSwitcher.js"></script>

    <script src="/plugins/tables/js/jquery.dataTables.min.js"></script>
    <script src="/plugins/tables/js/datatable/dataTables.bootstrap4.min.js"></script>
    <script src="/plugins/tables/js/datatable-init/datatable-basic.min.js"></script>
    -->

<script src="https://placehold.it/50/55C1E7/fff&text=U"></script>
<script src="https://placehold.it/50/FA6F57/fff&text=ME"></script>


<script src="~/plugins/common/common.min.js"></script>

<script src="~/plugins/jqueryui/js/jquery-ui.min.js"></script>
<script src="~/plugins/jquery/jquery.min.js"></script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js" integrity="sha512-rstIgDs0xPgmG6RX1Aba4KV5cWJbAMcvRCVmglpam9SoHZiUCyQVDdH2LPlxoHtrv17XWblE/V/PP+Tr04hbtA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js" integrity="sha512-xq+Vm8jC94ynOikewaQXMEkJIOBp7iArs3IhFWSWdRT3Pq8wFz46p+ZDFAR7kHnSFf+zUv52B3prRYnbDRdgog==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>



    <script>

        function getTeachers() {
  /*
        var filters = {}
        try {
            const category = document.getElementById("courcesNames").value;
            const parentName = document.getElementById("searchParentName").value;
            const minDate = document.getElementById("minDate").value;
            //const groupId = document.getElementById("group").value;

            // Create the JavaScript object with selected values
            filters = {
                ParentName: parentName,
                PossibleCourse: category,
                MinDateCreated: minDate,
                //GroupId = groupId
            };


            // Perform further actions with the selected values, such as filtering or sending a request
            console.log(filters);
        }
        catch (ex) { console.log("err"); }


        var data = {
            StudentFilterModel: filters,
            //orders: orders
        };
        */
        
        console.log("okkk");

        var tableBody = $("#tableBody");

        $.ajax({
            url: "/Teachers/GetTeachersAsync",
            type: "GET",
            dataType: "json",
            //data: JSON.stringify(data),
            contentType: "application/json",

            success: function (data) {
                console.log(data)
                data = JSON.parse(data);
                if (!Array.isArray(data)) return;
                    

                var tableUsers = document.getElementById("tableBody");
                tableUsers.innerHTML = "";

                if (data.length === 0) {
                    var row = "<div style='display:flex;flex;grid-gap:20px;justify-content:center '>"
                    row += "<h3>Teacher`s list is empty</h3></div>"
                    tableBody.append(row);
                }

                        
                else {
                        
                    data.forEach(function (item, i, arr) {
                            var student = item;

                        tableBody.append("<input type='hidden' name='itemId'  value='" + item.Id + "'/>");

                        var row = '<tr>' +
                            '<td><a href="/Account/Item/' + student.ApplicationUser.Id + '" style="font-weight:900;color:#7571f9">' + student.ApplicationUser.Login + '</a></td>' +
                            '<td>' + student.ApplicationUser.FirstName + ' ' + student.ApplicationUser.LastName + ' ' + student.ApplicationUser.Surname + '</td>' +
                            '<td>' + student.ApplicationUser.Sex + '</td>' +
                            '<td>' + student.ApplicationUser.Phone + '</td>' +
                            '<td>' + student.ApplicationUser.Email + '</td>' +
                            '<td>' + student.ApplicationUser.BirthDate + ' - ' + (new Date().getFullYear() - new Date(student.ApplicationUser.BirthDate).getFullYear()) + '</td>'
                            //+ '<td>' + (student.Groups == null ? 'Not Studiet' : 'Studiet') + '</td>';

                            if (student.Groups != null) {
                                row += '<td>';
                                student.Groups.forEach(function (group) {
                                    row += '<p>' + group.Name + '</p>';
                                });
                                row += '</td>';
                            } else {
                                row += '<td></td>';
                            }

                        row += '<td>' + (student.Lessons == null ? '0' : student.Lessons.length) + '</td>' +
                            '<td>' + (student.Lessons == null ? '0' : student.Lessons.length) + '</td>' +
                            '<td>' + (student.Lessons == null ? '0' : student.Lessons.filter(function (lesson) {
                                return new Date(lesson.StartTime).getMonth() == new Date().getMonth();
                            }).length) + '</td>' +
                            '<td>0 salary</td>' +
                            '<td>' + student.DateCreated + '</td>' +
                            '<td>---</td>' +
                            '<td>' + student.IsDeleted + '</td>' +
                            '</tr>';

                        tableBody.append(row);
                    }); <!--foreach-->
                } <!--else-->
                    
            }
        });

    }

    $(document).ready(function () {

            getTeachers();
    });

    </script>