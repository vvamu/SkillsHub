@using SkillsHub.Application.DTO;

@model Teacher

    

<div class="row page-titles mx-0">
    <div class="col p-md-0">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                
                <!--<form><a asp-action="Item" asp-controller="Account" asp-route-id="Model.ApplicationUserId">Account</a></form>-->
                <span>Account</span>
            </li>
            <li class="breadcrumb-item active"><a href="javascript:void(0)">Teacher edit</a> 
                <label>Active</label>
            <select asp-for="IsDeleted">
                <option value="@true">+</option>
                <option value="@false">-</option>
            </select>    
            
            </li>
        </ol>
    </div>
</div>
<!-- row -->
<form class="mt-1 mb-5 login-input" method="post">
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group row">
                            <label class="col-lg-4 col-form-label" for="val-range">
                                <div class="validation text-center" asp-validation-summary="ModelOnly" style="color:red;font-weight:400;"></div>

                                @if (Model != null)
                                {
                                    <input type="hidden" asp-for="ApplicationUserId" value="@Model.ApplicationUserId" />
                                    <input type="hidden" asp-for="Id" value="@Model.Id" />
                                    @if (Model.PossibleCources != null)
                                    {
                                        var options = new System.Text.Json.JsonSerializerOptions
                                        {
                                            ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve
                                        };

                                        try
                                        {

                                            <input type="hidden" id="studentPossibleCources" value="@System.Text.Json.JsonSerializer.Serialize(@ViewBag.PossibleCourses, options)" />

                                        }catch(Exception ex) {}
                                    }
                                }
                                @if (Model.Id != Guid.Empty)
                                {
                                    <h2>Edit teacher</h2>
                                }

                                else
                                {
                                    <h2>Create teacher</h2>
                                }
                            </label>


                            <div class="container-fluid">
                                <label>
                                    Possibility to work<span class="text-danger">*</span>
                                </label>
                                <div class="col-lg-6">
                                    @if(Model.Id != Guid.Empty)
                                    {
                                        <ul id="courcesNames" class="list-group col"></ul>
                                    }else{
                                        <div>After creating...</div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <div>
                            <div>
                                <h2>Schedule</h2>
                                <hr/>
                                <div class="container-fluid">
                                    <label>
                                        Working days<span class="text-danger">*</span>
                                    </label>
                                    <div class="col-lg-6">
                                        <ul class="list-group col">

                                            @if(Model.Id != Guid.Empty)
                                            {

                                                @foreach(var day in Enum.GetNames<DayOfWeek>()){
                                        
                                        
                                                <li class="list-group-item">
                                                    @if(Model != null && Model.WorkingDays != null && Model.WorkingDays.Contains(day))
                                                        {
                                                            <input name="workingDay" style='margin-right:5px;' type="checkbox" value="@day" checked />@day

                                                        }
                                                        else
                                                        {
                                                            <input name="workingDay" style='margin-right:5px;' type="checkbox" value="@day" />@day
                                                        }
                                                    </li>
                                                    }
                                            }
                                            else
                                            {
                                                <li>After creating...</li>
                                            }
                                        </ul>
                                    </div>
                                </div>

                            </div><!-- <button type="button" class="btn btn-primary" onclick="CreateScheduleDay()">+</button>-->
                        </div>
                        <div id="schedule_d" class="form-group row"></div>
                    </div>
                    <div class="form-group row">
                        <div class="col-lg-8 ml-auto"> </div>
                    </div>
                </div>

                        <div class="card">
                            <div class="card-body">
                                <div>
                                    <div>
                                        <h2>Payment</h2>
                                        <hr />
                                        <label>Paid to teacher</label>
                                        <div style="display:flex;align-items:center">
                                             @{
                                                if(User.IsInRole("Admin"))
                                            {
                                            <input type="number" asp-for="PaidAmount" class="form-control" /> <span>BYN</span>
                                        }else
                                        {
                                            {
                                                <input type="number" asp-for="PaidAmount"  class="form-control" disabled/> <span>BYN</span>
                                            }
                                        }
                                    }
                                        </div>

                                        <div class="form-group row">
                                            <div class="col-lg-8 ml-auto"> <input type="submit" class="btn btn-primary" asp-action="Create" asp-controller="Teachers" value="Submit" /> </div>
                                        </div>

                                    </div><!-- <button type="button" class="btn btn-primary" onclick="CreateScheduleDay()">+</button>-->
                                </div>
                            </div>
                        </div>
                
            </div>
        </div>
    </div>
    </div>
</form>



<script src="~/plugins/common/common.min.js"></script>

<script src="~/plugins/jqueryui/js/jquery-ui.min.js"></script>
<script src="~/plugins/jquery/jquery.min.js"></script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js" integrity="sha512-rstIgDs0xPgmG6RX1Aba4KV5cWJbAMcvRCVmglpam9SoHZiUCyQVDdH2LPlxoHtrv17XWblE/V/PP+Tr04hbtA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js" integrity="sha512-xq+Vm8jC94ynOikewaQXMEkJIOBp7iArs3IhFWSWdRT3Pq8wFz46p+ZDFAR7kHnSFf+zUv52B3prRYnbDRdgog==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>



<script>
    function getCourcesNamesList() {

        var studentsList = $("#courcesNames");

        console.log("ok")

        let model;
        let studentSelectedOptions;

        var studentPossibleCources;
        var courseIds;
        if ($("#studentPossibleCources") != null && $("#studentPossibleCources").val() != undefined) {

            studentPossibleCources = JSON.parse($("#studentPossibleCources").val());
            console.log("studentPossibleCources");
            console.log(studentPossibleCources);
            courseIds = studentPossibleCources.map(function (course) {
                return course.CourseNameId;
            });
        }
        console.log("ok")



        $.ajax({
            url: "/Cource/GetCourcesNamesAsync",
            type: "GET",
            dataType: "json",
            success: function (data) {
                data = JSON.parse(data);
                if (Array.isArray(data)) {

                    data.forEach(function (item, i, arr) {
                    studentsList.append("<input type='hidden' name='itemId'  value='" + item.Id + "'/>");

                    var appendedLine = "<li class='list-group-item'>";
                    console.log("ok")
                    

                    
                    if (courseIds != undefined && courseIds.includes(item.Id))
                        appendedLine += "<input type='checkbox' name='itemValue' asp-route-itemValue='this.value'  style='margin-right:5px;' value='" + item.Id + "' checked  /> ";
                    else
                        appendedLine += "<input type='checkbox' name='itemValue' asp-route-itemValue='this.value'  style='margin-right:5px;' value='" + item.Id + "'  /> ";

                    appendedLine += item.Name;
                    appendedLine += "</li>"

                    studentsList.append(appendedLine);
                    })
                }
            }
        });

    }

    function CreateScheduleDay() {
        let schedule = $("#schedule_d")[0];
        var div = document.createElement('div');
        var elementValue = '<div><div id="insert" class="card-body">'
        elementValue += '<label>Enter day name</label><select class="form-control" name="dayName"><option>Monday</option><option>Tuesday</option><option>Wednesday</option><option>Tuesday</option><option>Thursday</option><option>Friday</option><option>Saturday</option><option>Sunday</option></select>'
        elementValue += '<label>Enter start time (12:00 AM)</label><input class="form-control" type="time" name="startTime" placeholder="Enter..." />'
        elementValue += '<label>Enter duration (in minutes)</label><input class="form-control" type="number" name="duration" placeholder="Enter..." />'
        elementValue += '<button style="margin-top:10px" class="btn btn-outline-danger" onclick="RemoveScheduleDay(this)" type="button"> Remove this day</button>'
        elementValue += '</div></div>';
        elementValue += '<hr/>'
        div.innerHTML = elementValue;
        schedule.appendChild(div);
    }

    $(document).ready(function () {
        //getDataByAjax("/Student/GetStudentListAsync")
        getCourcesNamesList();
        //CreateScheduleDay();
    });

</script>