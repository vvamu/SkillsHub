@using Microsoft.AspNetCore.Identity
@using SkillsHub.Application.Helpers;
@using SkillsHub.Application.DTO;
@using SkillsHub.Domain.BaseModels


@model Group
@inject UserManager<ApplicationUser> _userManager;
@inject SkillsHub.Persistence.ApplicationDbContext _context;


<!-- Custom Stylesheet -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
<link href="~/plugins/tables/css/datatable/dataTables.bootstrap4.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js"></script>

<style>
    .search-input {
        min-width: 30px
    }

    .search-select {
        min-width: 30px
    }
</style>


<div>
    <div>

        <div class="row page-titles mx-0">
            <div class="col p-md-0">
                <ol class="breadcrumb" style="display:flex;align-items:center">
                    <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                    <li class="breadcrumb-item active"><a href="javascript:void(0)">Home</a></li>
                    <form>
                        <li>
                                    @if (User.IsInRole("Admin"))
                                    {
                                <button type="submit" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" asp-action="Create" asp-controller="Group">
                                    Create new
                                </button>
                                    }
                                    <!--if (User.IsInRole("Teacher"))
                                    {
                                <button type="submit" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" asp-action="Create" asp-controller="Group">
                                    Request to create new
                                </button>
                                    }-->

                            <!--<a class="dropdown-item" asp-action="Create" asp-controller="Account"></a>-->

                        </li>
                    </form>
                </ol>
            </div>
        </div>


        <!--NAVBAR - Search, Filter, Sort-->

        <nav class="navbar navbar-expand-lg bg-light">
            <div class="container-fluid">
                <div class=" navbar-collapse" id="navbarSupportedContent" style="display:flex;">

                    <div class="row">
                        <div class="col col-10">
                            <div class="" style="display:flex;grid-gap:10px;flex-wrap:wrap">
                               <div class="" style="display:flex;grid-gap:10px;flex-wrap:wrap">
                                    <div class="nav-item">
                                        <div class="input-group icons">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text bg-transparent border-0 pr-2 pr-sm-3" id="basic-addon1"><i class="mdi mdi-magnify"></i></span>
                                            </div>


                                            <input type="search" onkeypress="getGroups()" id="filter-name" class="form-control search-input" placeholder="Search by group name" />

                            <div class="form-group ">
                                <label class=" col-form-label" for="val-skill">
                                    <h4>Total lessons count (from @Model.PaymentCategory.MinCountLessonsToPay , passed: @Model.PassedLessonsCount)<span class="text-danger">*</span></h4>
                                </label>
                                <div style="display:flex;grid-gap:10px">
                                    <input class="form-control" type="number" asp-for="LessonsCount" min="1" max="50" id="lessonsCount" style="margin-right:10%" class="form-control"  />
                                    <div class="validate"></div>
                                    <div>
                                        <input type="checkbox" asp-for="IsUnlimitedLessonsCount" onclick="CreateUnlimitedLessons()" />
                                        <span style="color:lightseagreen">For unlimited count lessons</span>
                                    </div>
                                </div>
                            </div>

                        <div class="form-group ">
                            <label class=" col-form-label" for="val-skill">
                                <h4>Category <span class="text-danger">*</span></h4>
                            </label>
                            <select asp-for="LessonTypeId" class="form-select" id="lessonTypes"  disabled="disabled">
                              

                            </select>
                            <ul>
                                        @{
                                            _context.LessonTypes.ToList();
                                            int min = 0;
                                            if (Model.LessonType != null) min = @Model.PaymentCategory.MinCountLessonsToPay;

                                    <li>Min count of students by type: @Model.PaymentCategory.MinCountLessonsToPay</li>
                                    <li>Max count of students by type: ---</li>
                                        }
                            </ul>
                        </div>

                        <div class="form-group ">
                            <label class=" col-form-label" for="val-skill">
                                <div style="display:flex">
                                    <h4>Group with permanent staff <span class="text-danger">*</span></h4>
                                    (all students to all lessons)
                                </div>
                            </label>
                                
                                @if (Model.IsPermanentStaffGroup)
                            {
                                <select asp-for="IsPermanentStaffGroup" >
                                    <option value="@true" selected>Yes</option>
                                    <option value="@false">false</option>
                                </select>
                            }
                            else
                            {
                                <select asp-for="IsPermanentStaffGroup">
                                    <option value="@true">Yes</option>
                                    <option value="@false" selected>false</option>
                                    </select>
                            }
                         </div>
                        
                            

                       


                        @*<div class="form-group ">
                        <label class=" col-form-label" for="val-skill">
                        Teacher <span class="text-danger">*</span>
                        </label>

                        <select class="form-control" id="requiredTeachers"></select>
                        </div>*@

                        <div class="form-group ">
                            <label class=" col-form-label" for="val-skill">
                                <div style="display:flex"><h4>Teacher  <span class="text-danger">*</span></h4> (from All Teachers)</div>
                            </label>
                                <select asp-for="TeacherId" class="form-control" id="allTeachers">
                                </select> 
                        </div>

                        <!--
                                        <div class="form-group ">
                                            <label class=" col-form-label" for="val-skill">
                                                Online/Offline (delete)<span class="text-danger">*</span>
                                            </label>
                                            <select name="Term" asp-for="Term" class="form-control" id="val-skill">
                                                <option value="Online" >Online</option>
                                                <option value="Offline" selected>Offline</option>
                                            </select>
                        </div>-->



                                <div class="form-group ">
                                    <label class=" col-form-label" for="val-skill">
                                            <div style="display:flex">
                                                <h4>Students<span class="text-danger">*</span>(from @Model.LessonType.GroupType.MinimumStudents to @Model.LessonType.GroupType.MaximumStudents)</h4>
                                                <input type="button" onclick="getStudents()" class="btn btn-sm btn-primary" value="(get all)">

                                            </div>
                                    </label>
                                    <div id="studentsList" class="list-group col">
                                            <div class="d-flex justify-content-center">
                                                <div class="spinner-border text-primary" role="status">
                                                    <span class="visually-hidden">Loading...</span>
                                                </div>
                                            </div>
                                    </div>
                                </div>
                            </div>

                                </div>
                            </div>
                        </div>
                    
                        <div class="col">
                            <div>
                                <!--<div class="nav-item"> <input type="button" onchange="resetSearch()" value="Reset" class="form-control btn btn-primary search" /></div>-->
                                <div class="nav-item"><input type="button" onclick="getGroups()" value="Search" class="form-control btn btn-primary search" /></div>

                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </nav>
        <div id="allGroups">
            <div class="d-flex justify-content-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>

    </div>
</div>
<div id="partialZone"></div>


<script>
    function resetSearch() {

        $('.search-input').val('');
        // Reset select elements
        $('.search-select').prop('selectedIndex', 0);

        // Trigger the search
        getGroups();
    }

    function getGroups() {
        var groupFilters = {
            IsDeleted: $("#filter-isDeleted").val(),
            Name: $("#filter-name").val(),

            IsLateDateStart: $("#filter-time-start").val(),
            IsPermanentStaffGroup: $("#filter-permanent-staff").val(),

            LessonTypeId: $("#filter-lesson-type-id").val(),
            CourseNameId: $("#filter-course-name-id").val(),
        };

        orders = {
            OrderColumn: $('#sort-select').val(),
            OrderType: $('#sort-select-type').val(),
        }


        $("#allGroups").load("/Group/GetGroups", { filters: groupFilters, order: orders });
    }

    getGroups();


    function changeCourseName() {

        var value1 = document.getElementById('search').value;
        var select = document.getElementById('val-skill');
        var value2 = select.options[select.selectedIndex].value;


                        studentsList.append(appendedLine);
                    })
                }
            }
        });

    }


    function getLessonTypesList() {

        var studentsList = $("#lessonTypes");

            var teacherId = '@(Model.LessonType != null ? Model.LessonType.ToString() : "")'

        $.ajax({
            url: "/Cource/GetLessonTypesAsync",
            type: "GET",
            dataType: "json",
            success: function (data) {
                data = JSON.parse(data);
                if (Array.isArray(data)) {


                    data.forEach(function (item, i, arr) {
                        studentsList.append("<input type='hidden' name='itemId'  value='" + item.Id + "'/>");

                        var appendedLine = "";

                        if (teacherId != undefined && teacherId == item.Id)
                            appendedLine += "<option class='list-group-item' selected style='color:blue'  value='" + item.Id + "'>" + item.Name;
                        else
                            appendedLine += "<option class='list-group-item' value='" + item.Id + "'>" + item.Name;


                        //appendedLine += "<input type='checkbox' name='itemValue' asp-route-itemValue='this.value'  style='margin-right:5px;' value='" + item.Id + "'  /> ";
                        //appendedLine += item.FirstName + " " + item.LastName + " " + item.Surname;
                        appendedLine += " (MinumumLessonsToPay:" + item.MinumumLessonsToPay + "; LessonTimeInMinutes:" + item.LessonTimeInMinutes + "; Min/Max count students: " + item.MinimumStudents + "/" +  item.MaximumStudents + ")"
                        appendedLine += "</option>"

                        studentsList.append(appendedLine);
                    })




                }
            }
        });

    }

    function getTeachers() {

        var requiredTeachers = $("#allTeachers");
        //requiredTeachers.val() = "";
        requiredTeachers.empty();

            var teacherId = '@(Model.GroupTeacher != null ? @Model.GroupTeacher.TeacherId.ToString() : "")'

        
        $.ajax({
            url: "/Teachers/GetTeachersAsync",
            type: "GET",
            dataType: "json",
            success: function (data) {
                data = JSON.parse(data);
                if (Array.isArray(data)) {

                    if (data.length == 0) {
                        var appendEmpty = "<li class='list-group-item' value='' >Teacher's list is empty</li>";
                        requiredTeachers.append(appendEmpty);
                    }
                    data.forEach(function (item, i, arr) {

                        var user = item.ApplicationUser;
                        console.log("--"+user);
                        
                        requiredTeachers.append("<input type='hidden' name='itemId'  value='" + item.Id + "'/>");
                        var appendedLine = "";

                        if (teacherId != undefined && item.Id.toString() == teacherId)
                            appendedLine += "<option class='list-group-item' style='color:blue' selected name='teacherValue' value='" + item.Id + "'>";

                        else
                            appendedLine += "<option class='list-group-item' name='teacherValue' value='" + item.Id + "'>";


                        //appendedLine += "<input type='checkbox' name='itemValue' asp-route-itemValue='this.value'  style='margin-right:5px;' value='" + item.Id + "'  /> ";
                        appendedLine += user.Login + " - " + user.FirstName + " " + user.LastName + " " + user.Surname;
                        appendedLine += "</option>"

                        requiredTeachers.append(appendedLine);

                    })
                }
            }
        });
    }

    function CheckSchedule() {
        var checkSchedule = $("#checkSchedule");
        checkSchedule.empty();



    }
</script>
