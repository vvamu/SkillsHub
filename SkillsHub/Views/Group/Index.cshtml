@using Microsoft.AspNetCore.Identity
@using SkillsHub.Application.Helpers;
@using SkillsHub.Application.DTO;
@using SkillsHub.Domain.BaseModels


@model List<Group>
@inject UserManager<ApplicationUser> _userManager;
@inject SkillsHub.Persistence.ApplicationDbContext _context;


<style>
    li {
        margin-right: 20px; /* Расстояние снизу */
    }
</style>

    <!-- Custom Stylesheet -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

  <link href="~/plugins/tables/css/datatable/dataTables.bootstrap4.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js"></script>


    <div >
        <div >

            <div class="row page-titles mx-0">
                <div class="col p-md-0">
                    <ol class="breadcrumb" style="display:flex;align-items:center">
                        <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                        <li class="breadcrumb-item active"><a href="javascript:void(0)">Home</a></li>
                    <li>
                        
                            
                           
                                <form>
                                <li>

                                    <!-- Кнопка-триггер модального окна -->
                                    <!--
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" onclick="GetCreateModal()">
                                        Create new (Double click)
                                    </button>
                        -->
                        @if(User.IsInRole("Admin"))
                        {
                            <button type="submit" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" asp-action="Create" asp-controller="Group">
                                Create new
                            </button>
                        }
                        @if(User.IsInRole("Teacher"))
                        {
                            <button type="submit" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" asp-action="Create" asp-controller="Group">
                                Request to create new
                            </button>
                        }
                        
                        <!--<a class="dropdown-item" asp-action="Create" asp-controller="Account"></a>-->
                                    
                                </li>
                                </form>
                                
                            
                       
                    </li>
                    
                    </ol>
                </div>
            </div>


                <!--NAVBAR - Search, Filter, Sort-->
        
        <nav class="navbar navbar-expand-lg bg-light">
            <div class="container-fluid">
                <div class=" navbar-collapse" id="navbarSupportedContent" style="display:flex;">
                    
                    <div class="row">
                        <div class="col col-11">
                            <div class="" style="display:flex;grid-gap:10px;flex-wrap:wrap">
                                <ul>
                                <div class="nav-item">
                                    <div class="input-group icons">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text bg-transparent border-0 pr-2 pr-sm-3" id="basic-addon1"><i class="mdi mdi-magnify"></i></span>
                                        </div>
                               

                                        <input type="search" onkeypress="getGroups()" id="searchByName" class="form-control search-input" placeholder="Search by name" />
                                        <div class="drop-down d-md-none">
                                            <input type="text" class="form-control search-input" placeholder="Search">
                                        </div>
                                    </div>
                                </div>
                        
                        <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p style="white-space:nowrap">Статус:</p>
                            <select class="form-control" id="filter-isDeleted" name="val-skill" onchange="getGroups()">
                                <option value=""></option>
                                <option value="Yes">Закрыты</option>
                                <option value="No">Открыты</option>
                                </select>
                        </li>
                        <!--
                        <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p style="white-space:nowrap">Тип по набору в группу:</p>
                            <select class="form-control" id="val-skill" name="val-skill">
                                <option value=""></option>
                                <option value="">Набор открыт</option>
                                <option value="">Набор закрыт</option>
                                <option value="">С учителем</option>
                                <option value="">Без учителя</option>
                            </select>
                        </li>
                         <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p style="white-space:nowrap">Подобрать группу:</p>
                            <select class="form-control" id="val-skill" name="val-skill">
                                
                            </select>
                        </li>
                        -->

                         <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p style="white-space:nowrap">Подобрать группу:</p>
                            <select class="form-control" id="filter-type" name="val-skill" onchange="getGroups()">
                                <option value="IsLateDateStart" >Время запуска не определено</option>
                                <option value="IsVerified" >Запросы от учителя</option>
                                <option value="IsPermanentStaffGroupTrue" >Группы с постоянным составом</option>
                                <option value="IsPermanentStaffGroupFalse" >Группы с непостоянным составом</option>
                           </select>
                        </li>

                        <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p>Lesson type:</p>

                            <select class="form-control" id="val-skill" name="val-skill" onchange="getGroups()">
                                <option value="" selected>Все</option>
                                @if (_context.LessonTypes != null)
                                {
                                    foreach (LessonType item in _context.LessonTypes.Where(x=>x.IsDeleted  == false))
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            </select>
                        </li>
                        
                        
                        <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p>Category:</p>

                            <select class="form-control" id="search-courceName" name="val-skill" onchange="getGroups()">
                                <option value="" selected >Все</option>
                            @if(_context.CourseNames != null)
                                {
                                    foreach (CourseName item in _context.CourseNames.Where(x=>x.IsDeleted == false))
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            </select>
                        </li>

                        <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                            <p style="white-space:nowrap">Сортировать по:</p>
                            <select class="form-control" id="sort-select" name="val-skill" onchange="getGroups()">
                                <option value="" selected></option>
                                <option value="DateCreated" >Времени создания</option>
                                <option value="DateStart" >Времени запуска</option>
                            </select>
                        </li>
                         <li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                    <p style="white-space:nowrap">Order type:</p>
                                    <select class="form-control  search-select " id="sort-select-type" onchange="getGroups()">
                                        <option value="asc"  selected>↑</option>
                                        <option value="desc">↓</option>
                                    </select>
                                </li>
                       
                        
                    </ul>
                </div>
            </div>
        </nav>
        <div id="allGroups">
            <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
            </div>
        </div>

        </div>
    </div>
<div id="partialZone"></div>


<script>


    function getGroups(){
    var groupFilters = {
            IsDeleted: $("#filter-isDeleted").val()
          
        
    };

     orders = {
                OrderColumn: $('#sort-select').val(),
                OrderType: $('#sort-select-type').val(),
            }


    $("#allGroups").load("/Group/GetGroups", { filters: groupFilters, order : orders });
}

getGroups();


    function changeCourseName() {

        var value1 = document.getElementById('search').value;
        var select = document.getElementById('val-skill');
        var value2 = select.options[select.selectedIndex].value;
        

        $.ajax({
            url: "/Group/IndexByFilters",
            type: "GET",
            dataType: "json",
            data: { 'filterStr': value1, 'filterCourseId': value2 },
            success: function (data) {
                data = JSON.parse(data);
                if (Array.isArray(data)) {
                    console.log(data)

                }
            }
        });
    }
    function GetCreateModal()
    {
        $("#partialZone").load("/Group/GetCreateModal");
    }
</script>
        