@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@using SkillsHub.Application.DTO;
@using SkillsHub.Domain.BaseModels
@using SkillsHub.Domain.Models;
@using SkillsHub.Persistence;

@inject SkillsHub.Persistence.ApplicationDbContext _context;
@inject UserManager<ApplicationUser> _uM;


@model Lesson?;


<!-- Модальное окно -->
@if(Model!= null && Model.GroupId != Guid.Empty)
{
<div class="row page-titles mx-0">
    <div class="col p-md-0">
        <ol class="breadcrumb" style="display:flex;align-items:center">
            <li class="breadcrumb-item"><a asp-action="Item" asp-controller="Group" asp-route-id="@Model.GroupId">Group</a></li>
            <li class="breadcrumb-item active"><a href="javascript:void(0)">Lesson</a></li>
            <li>

            </li>

        </ol>
    </div>
</div>
}

@if ((!User.IsInRole("Admin") && !User.IsInRole("Teacher")) && Model != null)
    {
        if (Model.Id != Guid.Empty)
        {
            <form class="mt-1 mb-5 login-input" method="post">
                <input type="hidden" asp-for="GroupId" value="'@Model.GroupId'" />
                <div class="container-fluid">
                    <div class="row">
                        <div class="col">
                            <div class="card">
                                <div class="card-body">

                                <h2>Lesson </h2>  <span>- "@Model.Group.Name"</span> @if (Model != null && Model.IsСompleted)
                                    {
                                        <span style="color:palevioletred">Completed</span>
                                    }

                                    <div class="validation" asp-validation-summary="ModelOnly"></div>
                                    <div class="form-group">
                                        <label class=" col-form-label" for="val-skill">
                                            <h4>
                                              


                                            </h4>
                                        </label>
                                    </div>

                                    <div class="form-group">
                                        <label class=" col-form-label" for="val-skill">
                                            <h4>Date start | End date<span class="text-danger">*</span></h4>
                                        </label>
                                        <div style="display:flex; justify-content:space-between">
                                            <input type="datetime" asp-for="StartTime" class="form-control" value="@Model.StartTime" disabled>
                                            <input type="datetime" asp-for="EndTime" class="form-control" value="@Model.EndTime" disabled>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class=" col-form-label" for="val-skill">
                                            <h4>Topic</h4>
                                        </label>
                                        <input type="text" asp-for="Topic" disabled />
                                    </div>

                                    <div class="form-group">
                                        <label class=" col-form-label" for="val-skill">
                                            <h4>Teacher<span class="text-danger">*</span></h4>
                                        </label>
                                        @if (Model.Group != null && Model.Group.GroupTeachers != null)
                                        {

                                        foreach (var teacher in Model.Group.GroupTeachers.Select(x => x.Teacher).Select(x => x.ApplicationUser))
                                        {
                                            <a asp-action="Item" asp-controller="Account" asp-route-id="@teacher.UserTeacher.Id">@teacher.FirstName @teacher.LastName @teacher.Surname</a>


                                        }

                                        }
                                        else
                                        {
                                            <p>No teacher</p>
                                        }

                                    </div>


                                    <div class="form-group">
                                        <label class=" col-form-label" for="val-skill" style="display:flex;justify-content:space-between">

                                            <h4>Arrived students (from @Model.Group.GroupType.MinCountStudents to @Model.Group.GroupType.MaxCountStudents)<span class="text-danger">*</span></h4>

                                            @if (User.IsInRole("Student"))
                                            {

                                            <!--<button asp-action="RequestFromStudentToMissLesson" formmethod="post" asp-controller="Lesson" asp-route-id="Model.Id" class="btn btn-warning" />-->
                                            }
                                        </label>
                                        <ul>
                                            @foreach (var item in Model.ArrivedStudents)
                                            {

                                                <li>
                                                    <a asp-action="Item" asp-controller="Account" asp-route-id="@item.Id">@item.Student.ApplicationUser.FirstName @item.Student.ApplicationUser.LastName</a>
                                                </li>
                                            }
                                        </ul>

                                    </div>

                                    <div class="form-group">
                                        <label class=" col-form-label" for="val-skill" style="display:flex;justify-content:space-between">
                                            <h4>Link to webinar<span class="text-danger">*</span></h4>

                                            <input type="url" asp-for="Location" class="form-control" value="@Model.Location" placeholder="Url link" disabled>
                                        </label>
                                    </div>
                                    <div class="form-group" style="display:flex">
                                        <label class=" col-form-label" for="val-skill">
                                            <h4>Completed<span class="text-danger">*</span></h4>
                                        </label>

                                        <input type="checkbox" asp-for="IsСompleted" class="form-control" disabled>
                                    </div>








                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </form>
    }
}
else if (User.IsInRole("Admin") || User.IsInRole("Teacher"))
{
    try
    {
        _context.Groups.ToList();
        
        _context.ApplicationUsers.ToList();
    }
    catch(Exception ex) {}
    



        <form class="mt-1 mb-5 login-input" method="post">
            @if (Model != null)
            {
                <input type="hidden" asp-for="GroupId" value="@Model.GroupId" />
                <input type="hidden" asp-for="@Model.Id" />
                @if (Model.Teacher != null)
                {
                    <input type="hidden" id="teacherByLesson" value="'@Model.Teacher.Id'" />
                }
                @if (Model.Group != null && Model.Group.GroupTeachers != null)
                {
                    foreach (var tGr in Model.Group.GroupTeachers)
                    {
                        <input type="hidden" id="teacherByGroup" value="'@tGr.TeacherId'" />
                    }
               
                }
                <input type="hidden" asp-for="GroupId" value="@ViewBag.GroupId" />
                <input type="hidden" name="GroupId" value="@ViewBag.GroupId" />

            }

            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                            <div style="display:flex;align-items:center;grid-gap:6%">
                                <h2>Lesson editor</h2>

                                <div style="display:flex;align-items:baseline;grid-gap:6%">
                                @if (Model != null && Model.IsСompleted)
                                {
                                    <span style="color:palevioletred">- already completed</span>
                                }
                                else
                                {
                                    <span> - complete status</span>
                                }
                                <input class="form-check-input" type="checkbox" asp-for="IsСompleted" />
                                </div>
                            </div>


                            <div>
                                <div class="validation" asp-validation-summary="ModelOnly"></div>

                            </div>

                                <div class="form-group">

                                    <label class=" col-form-label" for="val-skill" style="display:flex">
                                        <h4>Start time | End time<span class="text-danger">*</span></h4>
                                        @if(Model != null && Model.Group != null && Model.Group.Course != null)
                                        {
                                            <p>
                                                (Default by lesson type: <span id="defaultLessonTime">@Model.Group.LessonTimeInMinutes</span> min)
                                            </p>
                                        }
                                    </label>

                                    <div style="display:flex;grid-gap:15px">


                                    @{
                                        DateTime minimumDateTime = DateTime.Now.AddYears(-1);
                                        //minimumDateTime.Second = 0;
                                    }
                                    <input type="datetime-local"
                                           id="meeting-time"
                                           step="any"
                                           class="form-control"
                                           asp-for="StartTime" />

                                        <input type="datetime-local"
                                               id="meeting-time2"
                                           step="any"
                                               class="form-control"
                                               asp-for="EndTime" />


                                        <!--<div style="width:50%; display:flex;align-items:center;grid-gap:10px">
                                            Set end time default <input type="button" value="set" class="btn btn-primary btn-sm" onclick="SetEndTime()" />
                                        </div>-->

                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class=" col-form-label" for="val-skill">
                                        <h4>Topic</h4>
                                    </label>
                                    <input type="text" asp-for="Topic" class="form-select" placeholder="Input topic..."/>
                                </div>


                                <!--Teacher-->
                                <div class="form-group">
                                    <label class=" col-form-label" for="val-skill">
                                    <h4>Teacher<span class="text-danger">*</span> @if (User.IsInRole("Admin")) {<span style = "font-size:small" > (by cource name)</span>}</h4>
                                    </label>
                                
                                @if (User.IsInRole("Admin"))
                                {
                                    
                                    

                                    <select asp-for="TeacherId" id="allTeachers" class="form-select">

                                        @{
                                            _context.Teachers.ToList();

                                            var ii = _context.ApplicationUsers.ToList();
                                            var teacherUserId = Guid.Empty;

                                        }
                                        @if (Model!= null && Model.Teacher != null && Model.Teacher.ApplicationUser != null)
                                        {
                                            var user = Model.Teacher.ApplicationUser;
                                            
                                            if(user!= null)
                                            {
                                                teacherUserId = user.Id;
                                                <option selected class="text-info" value="@Model.Teacher.Id">@user.Login @user.FirstName @user.LastName </option>
                                            }

                                        }
                                        @foreach (var teacher in _context.Teachers.Include(x=>x.ApplicationUser).Where(x => x.IsDeleted == false && x.ApplicationUser != null && x.ApplicationUser.Id != teacherUserId ))
                                        {
                                            try
                                            {


                                                List<Course> possibleCources = new List<Course>();
                                                if (teacher.PossibleCources != null) possibleCources = teacher.PossibleCources.Where(x => x.Course != null).Select(x => x.Course).ToList();
                                            //if(Model!= null && Model.Group != null && Model.Group.CourseName!= null &&possibleCources.Contains(Model.Group.CourseName))
                                            //{
                                                <option value="@teacher.Id">@teacher.ApplicationUser.Login - @teacher.ApplicationUser.FirstName @teacher.ApplicationUser.LastName @teacher.ApplicationUser.Surname</option>

                                            //}
                                            }
                                            catch (Exception ex) { }
                                        }

                                    </select>
                                }
                                else
                                {
                                    <select asp-for="TeacherId" id="allTeachers" class="form-select" disabled>                                    
                                        @if (Model != null && Model.Teacher != null && Model.Teacher.ApplicationUser != null)
                                        {
                                            _context.Teachers.ToList();
                                            _context.ApplicationUsers.ToList();
                                            var user = Model.Teacher.ApplicationUser;


                                            <option selected class="text-info" value="@Model.Teacher.Id">@user.Login @user.FirstName @user.LastName @user.Surname</option>


                                        }
                                        

                                    </select>
                                }

                            </div>

                                <div class="form-group">
                                    <label class=" col-form-label" for="val-skill">
                                        <h4>Link to webinar</h4>
                                    </label>
                                    <input type="text" asp-for="Location" class="form-select" placeholder="Input link...">
                                </div>

                                <div class="form-group">
                                    <label class=" col-form-label" for="val-skill">
                                        <h4>Link to materials</h4>
                                    </label>
                                <input type="text" asp-for="AdditionalMaterials" class="form-select" placeholder="Input link...">
                                </div>
                            <div class="form-group">
                                <label class=" col-form-label" for="val-skill">
                                    <h4>Comment</h4>
                                </label>
                                <textarea class="form-control" asp-for="Comment" rows="3" maxlength="300"></textarea>
                            </div>

                              @if(Model != null && Model.Id != Guid.Empty)
                              {
                                <div id="arrivedStudentsList">
                                    <div class="d-flex justify-content-center">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                    </div>
                                </div>
                              }

                                        
                                    


                                <hr />
                               
                                <div class="form-group">
                                    @if (Model != null && Model.Id != Guid.Empty)
                                    {
                                        <input type="submit" asp-action="Edit" asp-controller="Lesson" class="btn btn-primary" value="Edit" formmethod="post" />
                                    }
                                    else
                                    {
                                        <input type="submit" asp-action="Create" asp-controller="Lesson" class="btn btn-primary" value="Create" formmethod="post" />
                                    }
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    }


<script>


    function SetStartTime() {
        
        var startTimeInput = document.getElementById("meeting-time");
        var currentTime = new Date();
        var formattedTime = currentTime.toISOString().slice(0, 16);
        startTimeInput.value = formattedTime;
        

    }

    function SetEndTime() {
        // Get the values of the elements
        var startTimeInput = document.getElementById("meeting-time");
        var endTimeInput = document.getElementById("meeting-time2");
        var defaultLessonTimeSpan = document.getElementById("defaultLessonTime");

        // Get the DateTime values from the inputs
        var startTime = new Date(startTimeInput.value);
        var defaultLessonTime = parseInt(defaultLessonTimeSpan.innerText);

        // Получить текущее время
        var currentTime = new Date();

        // Получить разницу в минутах между начальным временем и текущим временем
        var diffMinutes = Math.floor((currentTime - startTime) / 60000);

        // Если разница меньше defaultLessonTime, установить конечное время с учетом defaultLessonTime
        var endTime = new Date(startTime.getTime() + (diffMinutes < defaultLessonTime ? defaultLessonTime * 60000 : diffMinutes * 60000));

        // Format the EndTime to the required format (YYYY-MM-DDTHH:MM)
        var formattedEndTime = endTime.toISOString().slice(0, 16);


        // Set the value of the EndTime input
        endTimeInput.value = formattedEndTime;
    }


    function getLessonTypesList() {

        var studentsList = $("#lessonTypes");

        $.ajax({
            url: "/Cource/GetLessonTypesAsync",
            type: "GET",
            dataType: "json",
            success: function (data) {
                data = JSON.parse(data);
                if (Array.isArray(data)) {


                    data.forEach(function (item, i, arr) {
                        studentsList.append("<input type='hidden' name='itemId'  value='" + item.Id + "'/>");

                        var appendedLine = "<option class='list-group-item' asp-for='LessonTypeId' value='" + item.Id + "'>" + item.Name;

                        appendedLine += "</option>"

                        studentsList.append(appendedLine);
                    })
                }
            }
        });

    }

    function getTeachers() {

        var requiredTeachers = $("#allTeachers");
        var teacher = $("#teacherByLesson").val();
        var teacher2 = $("#teacherByGroup").val();
        var teacherId = ""

        if (teacher2 != undefined)
            teacherId = teacher2
        if (teacher != undefined)
            teacherId = teacher
        console.log("fefwefef")

        $.ajax({
            url: "/Teachers/GetTeachersAsync",
            type: "GET",
            dataType: "json",
            success: function (data) {
                data = JSON.parse(data);
                if (Array.isArray(data)) {

                    if (data.length == 0) {
                        var appendEmpty = "<li class='list-group-item' value='' >Teacher's list is empty</li>";
                        requiredTeachers.append(appendEmpty);
                    }
                    data.forEach(function (item, i, arr) {
                        requiredTeachers.append("<input type='hidden' name='itemId'  value='" + item.Id + "'/>");

                        var appendedLine = ""
                        if (teacherId != undefined && item.Id.toString() == teacherId)
                            appendedLine += "<option class='list-group-item' style='color:blue' selected name='teacherValue' value='" + item.Id + "'>";
                        else
                            appendedLine = "<option class='list-group-item' asp-for='LessonTypeId' value='" + item.Id + "'>";
                        appendedLine += item.ApplicationUser.FirstName + " " + item.ApplicationUser.LastName + " " + item.ApplicationUser.Surname
                        appendedLine += "</option>"

                        requiredTeachers.append(appendedLine);
                    })




                }
            }
        });
    }

    function selectAllStudents() {



    }

    function unselectAllStudents() {



    }

    //-------------------------------------------------
    function loadArrivedStudentsList() {
        $("#arrivedStudentsList").load("/Lesson/GetArrivedStudentsByLesson", { id: '@Model.Id' });
    }
    function CreateArrivedStudent(userId) {
        var valdata = { lessonId: '@Model.Id', userId: userId }
        $.ajax({
            url: "/Lesson/CreateArrivedStudent",
            type: "POST",
            dataType: "json",
            data: valdata
        }).done(function (result) {
            console.log("Successfully removed arrived student");
            loadArrivedStudentsList();
        }).fail(function (jqXHR, textStatus, errorThrown) {
            console.log("Error occurred during the AJAX request:");
            console.log(jqXHR);
            console.log(textStatus);
            console.log(errorThrown);
        });
    }

    function RemoveArrivedStudent(userId) {

        var valdata = { lessonId: '@Model.Id', userId: userId }
        $.ajax({
            url: "/Lesson/RemoveArrivedStudent",
            type: "POST",
            dataType: "json",
            data: valdata
        }).done(function (result) {
            console.log("Successfully removed arrived student");
            loadArrivedStudentsList();
        }).fail(function (jqXHR, textStatus, errorThrown) {
            console.log("Error occurred during the AJAX request:");
            console.log(jqXHR);
            console.log(textStatus);
            console.log(errorThrown);
        });
    }

    /*
    function SaveStudentsByLesson() {

        var valdata = $("#SaveStudentsByLesson").serializeArray();

        var visitStudents = $('.visitStudent').map(function () {
            return $(this).val();
        }).get();

        var passedStudents = $('.passedStudent').map(function () {
            return $(this).val();
        }).get();

        var valdata2 = { visitStudent: visitStudents, passedStuden: passedStudents }
        console.log(valdata2);

        $.ajax({
            url: "/Lesson/SaveStudentsByLesson",
            type: "POST",
            dataType: 'json',
            data: valdata2

        });
    }*/


    //-------------------------------------------------


    $(document).ready(function () {


        //getStudents();
        //getTeachers();
        console.log("teacher")

        //getLessonTypesList();
        loadArrivedStudentsList();

        SetStartTime()
        SetEndTime()
    });

</script>