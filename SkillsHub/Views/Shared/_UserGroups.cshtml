@using SkillsHub.Domain.BaseModels;

@model (ApplicationUser user, List<Group>? groups, List<Group>? teacherGroups);

@{

    var teacherGroups = new List<Group>();
    var studentGroups = new List<Group>();
    if (Model.groups.Select(x => x.Teacher).Select(x => x.Id).Contains(Model.user.UserTeacher.Id))
        teacherGroups = Model.groups;
}
@if(Model.teacherGroups !=null)
{
    <div class="card">
        <div class="card-body">
            <div style="display:flex;justify-content:space-between;margin-bottom:10px">
                <h1>Teacher groups</h1>
                <!--
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                    +
                </button>
                -->
            </div>

            <br />


            <!--
            <nav class="navbar navbar-expand-lg bg-light">
                <div class="container-fluid">
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link active" aria-current="page" href="#"><strong>All</strong></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" aria-current="page" href="#">Current</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" aria-current="page" href="#">Last</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
            -->
            @{
                if (Model.teacherGroups != null)
                {
                    foreach (var item in Model.teacherGroups)
                    {
                        var countEndedLessons = item.Lessons.Where(x => x.IsСompleted).Count();
                        var countLessons = item.Lessons.Count();
                        var scheduleDays = string.Join(",", item.DaySchedules.Select(x => Enum.GetName(typeof(DayOfWeek), x.DayName)));
                        var startTimes = item.DaySchedules.Select(x => x.WorkingStartTime).ToArray();
                        var endTimes = item.DaySchedules.Select(x => x.WorkingEndTime).ToArray();


                        <div class="card">
                            <div class="card-body">
                                <div style="display:flex;justify-content:space-between">
                                    <h3>Course - @item.CourseName,  Lesson type: @item.LessonType</h3>
                                    <h5>Group - '@item.Name'</h5>
                                    <div>
                                        <h5>@countEndedLessons / @countLessons lessons - XXX BYN</h5>
                                    </div>
                                </div>
                                <p>
                                    @for(int a = 0; a < startTimes.Count(); a ++)
                                    {
                                        <span>@startTimes[a].ToString() - @endTimes[a].ToString() , </span>
                                        
                                    }
                                    - @scheduleDays

                                </p>
                                <div style="margin:20px;align-items:center;display:flex;grid-gap:20px">

                                    @for (int i = 0; i < item.Lessons.Count(); i++)
                                    {
                                        <div>
                                            <div>@item.Lessons[i].StartTime.ToShortTimeString()</div>
                                            
                                            <input type="checkbox" asp-for="@item.Lessons[i]" disabled/>
                                           
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>
                    }
                }
                else
                {
                    <div class="card">
                        <div class="card-body">
                            <h3>Groups list is empty</h3>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}

@if (Model.groups != null)
{
    <div class="card">
        <div class="card-body">
            <div style="display:flex;justify-content:space-between;margin-bottom:10px">
                <h1>Teacher groups</h1>
                <!--
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                    +
                </button>
                -->
            </div>

            <br />


            <!--
            <nav class="navbar navbar-expand-lg bg-light">
                <div class="container-fluid">
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link active" aria-current="page" href="#"><strong>All</strong></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" aria-current="page" href="#">Current</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" aria-current="page" href="#">Last</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
            -->
            @{
                if (Model.groups != null)
                {
                    foreach (var item in Model.groups)
                    {
                        var countEndedLessons = item.Lessons.Where(x => x.IsСompleted).Count();
                        var countLessons = item.Lessons.Count();
                        var scheduleDays = string.Join(",", item.DaySchedules.Select(x => Enum.GetName(typeof(DayOfWeek), x.DayName)));
                        var startTimes = item.DaySchedules.Select(x => x.WorkingStartTime).ToArray();
                        var endTimes = item.DaySchedules.Select(x => x.WorkingEndTime).ToArray();


                        <div class="card">
                            <div class="card-body">
                                <div style="display:flex;justify-content:space-between">
                                    <h3>Course - @item.CourseName,  Lesson type: @item.LessonType</h3>
                                    <h5>Group - '@item.Name'</h5>
                                    <div>
                                        <h5>@countEndedLessons / @countLessons lessons - XXX BYN</h5>
                                    </div>
                                </div>
                                <p>
                                    @for (int a = 0; a < startTimes.Count(); a++)
                                    {
                                        <span>@startTimes[a].ToString() - @endTimes[a].ToString() , </span>

                                    }
                                    - @scheduleDays

                                </p>
                                <div style="margin:20px;align-items:center;display:flex;grid-gap:20px">

                                    @for (int i = 0; i < item.Lessons.Count(); i++)
                                    {
                                        <div>
                                            @if (item.Lessons[i].ArrivedStudents.Select(x=>x.Id).Contains(Model.user.Id) && item.Lessons[i].IsСompleted == true)
                                            {
                                                <div style="color:red">@item.Lessons[i].StartTime.ToShortTimeString()</div>

                                            }
                                            else if (!item.Lessons[i].ArrivedStudents.Select(x => x.Id).Contains(Model.user.Id) && item.Lessons[i].IsСompleted == true)
                                            {
                                                <div style="color:darkgray">@item.Lessons[i].StartTime.ToShortTimeString()</div>
                                            }
                                            else{
                                                <div >@item.Lessons[i].StartTime.ToShortTimeString()</div>
                                
                                            }
                                                <input type="checkbox" asp-for="@item.Lessons[i]" disabled />
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>
                    }
                }
                else
                {
                    <div class="card">
                        <div class="card-body">
                            <h3>Groups list is empty</h3>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}

