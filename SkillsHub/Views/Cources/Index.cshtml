@model (IQueryable<Object>,IQueryable<CourseName>,IQueryable<LessonType>);
@{
	ViewData["Title"] = "Create";
}
<div class=" text-center ">
	<link href="~/css/style.css" rel="stylesheet">
	<style>
		.rounded-t-5 {
			border-top-left-radius: 0.5rem;
			border-top-right-radius: 0.5rem;
		}

		.rounded-bl-lg-5 {
			border-bottom-left-radius: 0.5rem;
		}

		.my-background {
			background-color: #F3F3F9 !important;
		}
	</style>

	<div class="row page-titles mx-0">
		<div class="col p-md-0">
			<ol class="breadcrumb" style="display:flex;align-items:center">
				<li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
				<li class="breadcrumb-item active"><a href="javascript:void(0)">Home</a></li>
			</ol>
		</div>
	</div>
	<div class="container-fluid">
		<div class="row">

			<!--CourseName-->
			<div class="col">
				<h2>Cource`s names</h2>
				@{
					if (Model.Item2 == null || Model.Item2.Count() == 0)
					{
							<div style=" display:flex;flex;grid-gap:20px;justify-content:center ">
								<h3>Cources list is empty</h3>
							</div>

					}
					else
					{
						<!--NAVBAR - Search, Filter, Sort-->
						<div class="container-fluid">
									<div class="row">
										<div class="col-12">
											<div class="card">

						<nav class="navbar navbar-expand-lg bg-light">
							<div class="container-fluid">

								<div class="collapse navbar-collapse" id="navbarSupportedContent" style="display:flex;grid-gap:20px">
									<ul class="navbar-nav me-auto mb-2 mb-lg-0">

										
										<li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px; margin-right:5%">
											<p style="white-space:nowrap">Activity type:</p>
											<select class="form-select" id="val-skill" name="val-skill">
												<option value="">Active</option>
												<option value="">Not Active (Deleted)</option>
											</select>
										</li>
										<li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
											<p style="white-space:nowrap">Order by:</p>
											<select  class="form-select" id="val-skill" name="val-skill">
												<option value="">Name</option>
												<option value="">Date created</option>
											</select>
										</li>
									</ul>
								</div>
							</div>
						</nav>
									</div>
								</div>
							</div>
						</div>

						foreach (var item in Model.Item2.Where(x=>x.IsDeleted == false))
						{
							var courceNameId = item.Id;
							var formId = "coureName" + courceNameId;

							<div class="container-fluid" style="margin-bottom:-5%">
									<div class="row">
										<div class="col-12">
											<div class="card">
												<div class="card-body">
												
													<div style="display:flex;justify-content:space-between">
													<div style="display:flex">
														<label><span style="font-size:20px; font-weight:700">Name</span>   @if(item.DateCreated != DateTime.MinValue) {  <span> |  Date created: @item.DateCreated</span> }</label>

														</div>
														<form>
														<input type="hidden" asp-for="@item.Id" value="@item.Id" />
														<button class="btn btn-danger btn-sm" type="submit" asp-action="DeleteCourceName" asp-controller="Cources" ><div>X</div></button>
													</form>
													</div>
												<form id="@formId">
													<div style="display:flex">
														<div>
														<input type="text" class="form-control" asp-for="@item.Name" value="@item.Name" />
														</div>
														
													</div>
													<div style="display:flex">
													</div>
													<div style="display:flex">
														<label>MinimumAge  |  </label>
														<label>MaximumAge</label>
													</div>
														<div style="display:flex">
															<input type="hidden" asp-for="@item.Id" value="@item.Id">
															<br/>
															<input type="number" class="form-control"  asp-for="@item.MinimumAge" value="@item.MinimumAge"/>
															<input type="number" class="form-control"  asp-for="@item.MaximumAge" value="@item.MaximumAge" />
															<br/>
															<button class="btn btn-primary" type="button"  onclick="SaveCourcesNames('@courceNameId')">Save</button>
														    <!--<form><a class="btn btn-primary" type="submit" asp-route-courceId="item.Id" asp-action="CreateCourceName" asp-controller="Cources">Edit</a></form>-->
														</div>
													</form>
												</div>
											</div>
										</div>
									</div>
								</div>
						}
					}
				}
				<div class="container-fluid">
					<div class="row">													
					<form><a class="btn btn-primary" type="submit" asp-action="CreateCourceName" asp-controller="Cources">Create</a></form>
					</div>
				</div>
			</div>
			<div class="col">
				<h2>Lesson`s types</h2>
				@{
					if (Model.Item3 == null || Model.Item3.Count() == 0)
					{
							<div style=" display:flex;flex;grid-gap:20px;justify-content:center ">
								<h2>List is empty</h2>
							</div>
					}
					else
					{
						<!--NAVBAR - Search, Filter, Sort-->
						<div class="container-fluid">
									<div class="row">
										<div class="col-12">
											<div class="card">

						<nav class="navbar navbar-expand-lg bg-light">
							<div class="container-fluid">

								<div class="collapse navbar-collapse" id="navbarSupportedContent" style="display:flex;grid-gap:40px">
									<ul class="navbar-nav me-auto mb-2 mb-lg-0">


														<li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px;margin-right:5%">
															<p style="white-space:nowrap">Activity type:</p>
															<select class="form-control" id="val-skill" name="val-skill" onchange="ChangeActiveStatusLessonTypes()">
																<option value="">Active</option>
																<option value="">Not Active (Deleted)</option>
															</select>
														</li>

														<li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px;margin-right:5%">
															<p style="white-space:nowrap">Classes type:</p>
															<select class="form-control" id="val-skill" name="val-skill">
																<option value="">Offline</option>
																<option value="">Online</option>
															</select>
														</li>

														<li class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px;margin-right:5%">
															<p style="white-space:nowrap">User type:</p>
															<select class="form-control" id="val-skill" name="val-skill">
																<option value="">Group</option>
																<option value="">Individual</option>
															</select>
														</li>
									</ul>
								</div>
							</div>
						</nav>
									</div>
								</div>
							</div>
						</div>


						foreach (var item in Model.Item3.Where(x => x.IsDeleted == false))
						{
							var itemName = item.Id;
							var formId = "lessonTypeForm" + itemName;

							<div class="container-fluid" style="margin-bottom:-3%">
									<div class="row">
										<div class="col-12">
											<div class="card">
												<div class="card-body">
												

													<div style="display:flex;justify-content:space-between">
													<label><span style="font-size:20px; font-weight:700">Name</span>   @if(item.DateCreated != DateTime.MinValue) {  <span> |  Date created: @item.DateCreated</span> }</label>


														<form>
															<input type="hidden" asp-for="@item.Id" value="@item.Id" />
															
														<button class="btn btn-danger btn-sm" type="submit" asp-action="DeleteLessonType" asp-controller="Cources" value="@item.Id"><div>X</div></button>
														</form>
													</div>



												<form id="@formId">
													<div style="display:flex;justify-content:space-between">
														<h3><input type="text" class="form-control" asp-for="@item.Name" /></h3>
														<!--<button class="btn btn-danger">☓</button>-->
													</div>
														
														<div style="display:flex">
															<label>Teacher price by type  BYN  |  </label>
															<label>    Student price by type BYN</label>
														</div>
														<div style="display:flex">
															<input type="hidden" asp-for="@item.Id" value="@item.Id">
														<input value="@Convert.ToDecimal(item.TeacherPrice)" asp-for="@item.TeacherPrice" class="form-control"/>
														<input value="@Convert.ToDecimal(item.StudentPrice)" asp-for="@item.StudentPrice" class="form-control"/>
														</div>

													<div style="display:flex;margin-top:20px">
														<label>Teacher price Per Cource  BYN  |  </label>
														<label>Student price Per Cource BYN</label>
													</div>
													<div style="display:flex">
														<input value="@(Convert.ToDecimal(item.TeacherPrice) * item.MinumumLessonsToPay)" disabled name="TeacherPricePerCource" class="form-control" />
														<input value="@(Convert.ToDecimal(item.StudentPrice) * item.MinumumLessonsToPay)" disabled name="StudentPricePerCource" class="form-control" />
													</div>

													<div style="display:flex;margin-top:20px">
														<label>Minumum Lessons To Pay | Minimum Lessons in group</label>
													</div>
													<div style="display:flex;justify-content:space-between">
														<input type="number" class="form-control" asp-for="@item.MinumumLessonsToPay" />
														<input type="number" class="form-control" asp-for="@item.MinCountLessons"/>

														
													</div>

													<div style="display:flex;margin-top:20px">
														<label>Minimum count students to start group  </label>
														<label>Maximum students in group</label>
													</div>
													<div style="display:flex">
														<input asp-for="@item.MinimumStudents" class="form-control" />
														<input asp-for="@item.MaximumStudents" class="form-control" />
													</div>

													

													<div style="display:flex;margin-top:20px">
														<label>LessonTimeInMinutes</label>
													</div>
													<div style="display:flex;justify-content:space-between">
														<input class="form-control" type="number" asp-for="@item.LessonTimeInMinutes"></input>

														<button class="btn btn-primary" type="button" onclick="SaveLessonType('@item.Id')">Save</button>
													</div>
													</form>
												</div>
											</div>
										</div>
									</div>
								</div>
						}
					}
				}
				<div class="container-fluid">
					<div class="row"><form><a class="btn btn-primary" type="submit" asp-action="CreateLessonType" asp-controller="Cources">Create</a></form></div>
				</div>



			</div>
		</div>
	</div>




	<script>

		function SaveLessonType(itemId) {
			//Serialize the form datas.
			
			var valdata = $("#lessonTypeForm" + itemId).serialize();
			var data = JSON.stringify($("#lessonTypeForm" + itemId).serializeArray()); //  <-----------
			
			console.log(valdata)

			console.log("----")
			console.log(data);

			//to get alert popup
			$.ajax({
				url: "/Cources/SaveLessonType",
				type: "POST",
				dataType: 'json',
				contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
				data: valdata
			});
			alert("Saved");
			//$("<div>Saved</div>").insertAfter($("#lessonTypeForm"));
			
		}
		function SaveCourcesNames(itemId) {
			//Serialize the form datas.
			var valdata = $("#coureName" + itemId).serialize();
			console.log(valdata);
			//to get alert popup
			$.ajax({
				url: "/Cources/SaveCourcesNames",
				type: "POST",
				dataType: 'json',
				contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
				data: valdata
			});
			alert("Saved")
		}




		const exampleModal = document.getElementById('exampleModal')
		exampleModal.addEventListener('show.bs.modal', event => {
			// Кнопка, которая активировала модальное окно
			const button = event.relatedTarget
			// Извлекает информацию из атрибутов data-bs-*
			const recipient = button.getAttribute('data-bs-whatever')
			// При необходимости вы можете инициировать запрос AJAX здесь,
			// а затем выполнить обновление в обратном вызове.
			//
			// Обновляет содержимое модального окна.
			const modalTitle = exampleModal.querySelector('.modal-title')
			const modalBodyInput = exampleModal.querySelector('.modal-body input')

			modalTitle.textContent = `New message to ${recipient}`
			modalBodyInput.value = recipient
		})

		


	</script>
	<script src="~/plugins/common/common.min.js"></script>
	<script src="~/js/custom.min.js"></script>
	<script src="~/js/settings.js"></script>
	<script src="~/js/gleek.js"></script>
	<script src="~/js/styleSwitcher.js"></script>
	</>

