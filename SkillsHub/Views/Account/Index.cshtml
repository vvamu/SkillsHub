@using SkillsHub.Application.Helpers;
@using SkillsHub.Application.DTO;
@using SkillsHub.Domain.BaseModels
@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> _roleManager;
@model IQueryable<ApplicationUser>?
@{
ViewData["Title"] = "Пользователи ";
}


<link href="~/plugins/tables/css/datatable/dataTables.bootstrap4.min.css" rel="stylesheet">
<link href="~/css/style.css" rel="stylesheet">

<style>
    .search-input{
        min-width:30px
    }

    .search-select {
        min-width: 30px
    }
</style>

<div>
    <div >
        <form>
            <!-- NAVBAR - Search, Filter, Sort -->
            <nav class="navbar navbar-expand-lg bg-light">
                <div class="container-fluid">
                    <div class=" navbar-collapse" id="navbarSupportedContent" style="display:flex;justify-content:space-between">
                    
                   
                    
                            <div class="col">
                                <div class="" style="display:flex;grid-gap:10px;flex-wrap:wrap">
                                    <!--
                                    <div class="nav-item">
                                        <div class="input-group icons">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text bg-transparent border-0 pr-2 pr-sm-3" id="basic-addon1"><i class="mdi mdi-magnify"></i></span>
                                            </div>
                               

                                            <input type="search" onchange="getStudents()" id="searchByFIO" class="form-control search-input" placeholder="Search by name/username" />
                                            <div class="drop-down d-md-none">
                                                <input type="text" class="form-control search-input" placeholder="Search">
                                            </div>
                                        </div>
                                    </div>
                                    -->
                                    <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                        <p style="white-space:nowrap">Роль:</p>
                                        <select class="form-control search-select userRole" id="userRole" onchange="getStudents()">
                                            <option selected></option>
                                            <option value="Admin">Администратор</option>
                                            <option value="Student">Студент</option>
                                            <option value="Teacher">Учитель</option>
                                        </select>
                                    </div>
                                    <br/>

                                <!--
                                    <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                        <p style="white-space:nowrap">Курс студента:</p>
                                        <select class="form-control search-select courceStudent" id="lessonType-select" onchange="getStudents()">
                                            <option value="" selected></option>
                                        </select>
                                    </div>

                                    <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                        <p style="white-space:nowrap">Курс учителя:</p>
                                        <select class="form-control search-select courceTeacher" id="lessonType2-select" onchange="getStudents()">
                                            <option value="" selected></option>
                                        </select>
                                    </div>
                                    -->
                                <!--
                                <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                    <p style="white-space:nowrap">Рабочее время:</p>
                                    <select class="form-control search-select" id="studentDayName" name="dayName" onchange="getStudents()">
                                        <option></option>
                                        {
                                            var days = Enum.GetValues(typeof(DayOfWeek));
                                            foreach(var day in days)
                                            {
                                                        <option value="day">day</option>
                                            }
                                        }
                                    </select>
                                </div>
                            
                                <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                    <p style="white-space:nowrap">Рабочее время:</p>
                                    <select class="form-control search-select" id="teacherDayName" name="dayName" onchange="getStudents()">
                                        <option></option>
                                        {
                                            foreach (var day in days)
                                            {
                                                        <option>day</option>
                                            }
                                        }
                                    </select>
                                </div>
                                -->
                                <!--
                                <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                    <p style="white-space:nowrap">Удален:</p>
                                    <select class="form-control search-select " id="search-deleted" onchange="getStudents()">
                                        <option selected value="No">Нет</option>
                                        <option value="Yes">Да</option>
                                    </select>
                                </div>
                                -->

                                <!--
                                <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                    <p style="white-space:nowrap">Order by:</p>
                                    <select class="form-control  search-select " id="sort-select" >
                                        <option value="" selected></option>
                                        {
                                            var i = "Sex BirthDate RegistrationDate Phone Email SourceFindCompany".Split(" ");
                                            foreach(var a in i)
                                            {
                                                        <option value="a">a</option> !!
                                            }
                                        }
                                    </select>
                                </div>
                        
                                    <div class="nav-item" style="display:flex;align-items:baseline;grid-gap:10px">
                                        <p style="white-space:nowrap">Order type:</p>
                                        <select class="form-control  search-select " id="sort-select-type" onchange="getStudents()">
                                            <option value="asc"  selected>↑</option>
                                            <option value="desc">↓</option>
                                        </select>
                                    </div>-->
                        
                                     <div class="nav-item"><input type="button" onclick="getStudents()" value="Поиск" class="form-control btn btn-primary search" /></div>

                                <!--
                                <li class="nav-item">
                                    <input type="text" class="form-control search-input" placeholder="2017-06-04" id="minDate" />
                                </li>
                                -->
                                    </div>
                                </div>
                            <div>
                                <input style="margin-left:20px" class="btn btn-danger" asp-route-isHardDelete="true" asp-action="Delete" asp-controller="Account"  type="submit" value="Удалить">
                                <input name="isHardDelete"  type="hidden" value="true">
                                <a style="margin-left:20px" class="btn btn-secondary" asp-action="Create" asp-controller="Account">
                                   Создать
                                </a>

                                <!--
                                    <ul class="dropdown-menu">
                                        <form>
                                        <li><a class="dropdown-item" href="#">Invite via email</a></li>
                                        <li>

                                            <a class="dropdown-item" asp-action="Delete" asp-controller="Account">Удалить</a>
                                    
                                        </li>
                                        <li>

                                            <a class="dropdown-item" asp-action="Create" asp-controller="Account">Создать </a>
                                    
                                        </li>
                                        </form>
                                        </ul>
                                -->
                                </div>
                    </div>
                        
                   
                
                </div>
            </nav>


            <div id="usersList">
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>

        </form>
    </div>
</div>


<script src="~/plugins/tables/js/jquery.dataTables.min.js"></script>
<script src="~/plugins/tables/js/datatable/dataTables.bootstrap4.min.js"></script>
<script src="~/plugins/tables/js/datatable-init/datatable-basic.min.js"></script>


<script>

    function resetSearch() {

        $('.search-input').val('');
        // Reset select elements
        $('.search-select').prop('selectedIndex', 0);

        // Trigger the search
        getStudents();
    }

   

    function getStudents() {


        var filters = {}
        var orders = {}
        console.log($("#searchByFIO").val())
        try {
            //const searchLessonByTopic = document.getElementById("searchLessonByTopic").value;
            filters = {
                FIO: $("#searchByFIO").val(),
                StudentWorkingDay: $('#studentDayName').val(),
                TeachertWorkingDay: $('#teacherDayName').val(),
                StudentPossibleCource: $('#lessonType-select').val(),
                TeacherPossibleCource: $('#lessonType2-select').val(),
                IsDeleted: $('#search-deleted').val(),
                UserRole: $('#userRole').val()

            };
            console.log("hehe")
            //const order = document.getElementById("courcesNames").value;

            orders = {
                OrderColumn: $('#sort-select').val(),
                OrderType: $('#sort-select-type').val(),
            }

        }
        catch (ex) { console.log(ex); }

        if ($('#userRole').val() == "Teacher") {

            $("#studentDayName").parent().attr("hidden", true);
            $("#courcesNames").parent().attr("hidden", true);
            $("#teacherDayName").parent().attr("hidden", false);
            $("#courcesNames2").parent().attr("hidden", false);
        }
        else if ($('#userRole').val() == "Student") {

            $("#studentDayName").parent().attr("hidden", false);
            $("#courcesNames").parent().attr("hidden", false);
            $("#teacherDayName").parent().attr("hidden", true);
            $("#courcesNames2").parent().attr("hidden", true);

        }
        else if ($('#userRole').val() == "Admin") {

            $("#studentDayName").parent().attr("hidden", true);
            $("#courcesNames").parent().attr("hidden", true);
            $("#teacherDayName").parent().attr("hidden", true);
            $("#courcesNames2").parent().attr("hidden", true);

        }
        else {
            $("#studentDayName").parent().attr("hidden", true);
            $("#courcesNames").parent().attr("hidden", true);
            $("#teacherDayName").parent().attr("hidden", true);
            $("#courcesNames2").parent().attr("hidden", true);
        }

        //------------------------------------------------------------------
        
        $("#usersList").load("/Account/UsersTableList", { filters: filters, order: orders });

    }



    function getCourcesNamesList() {
        var studentsList = $("#courcesNames");
        var studentsList2 = $("#courcesNames2");
        $.ajax({
            url: "/Cource/GetCourcesNamesAsync?IsDeleted=false",
            type: "GET",
            dataType: "json",
            success: function (data) {
                data = JSON.parse(data);
                if (Array.isArray(data)) {


                    data.forEach(function (item, i, arr) {

                        var appendedLine = "";

                      
                            appendedLine = "<option class='list-group-item' name='courceId' asp-for='CourceId' value='" + item.Id + "'>" + item.Name;

                        //appendedLine += "<input type='checkbox' name='itemValue' asp-route-itemValue='this.value'  style='margin-right:5px;' value='" + item.Id + "'  /> ";
                        //appendedLine += item.FirstName + " " + item.LastName + " " + item.Surname;
                        //appendedLine += " (Min age:" + item.MinimumAge + ";Max age:" + item.MaximumAge + ")"
                        appendedLine += "</option>"

                        studentsList.append(appendedLine);
                        studentsList2.append(appendedLine);
                    })




                }
            }
        });

    }

    function GetLessonTypes() {

       

        filters_LessonType = {
            SubjectId: $("#subject-select option:selected").val(),
            CourseId: $("#course-select option:selected").val(),
            GroupTypeId: $("#groupType-select option:selected").val(),
            LocationType: $("#locationType-select option:selected").val(),
            AgeTypeId: $("#ageType-select option:selected").val(),
            IsDeleted: '-'

        }
        orders = {
            OrderColumn: "Id",
            OrderType: "asc",
        }

        var valData = { filters: filters_LessonType, order: orders };
        $.ajax({
            url: '/LessonType/OptionsList',
            type: 'GET',
            data: valData,
            success: function (data) {
                $("#lessonType-select").empty(); // Clear the select element
                $("#lessonType2-select").empty();
                
                var emptyOption = $('<option value=""></option>')
                var emptyClonedOption = emptyOption.clone();
                $("#lessonType-select").append(emptyOption);
                $("#lessonType2-select").append(emptyClonedOption);

                data.forEach(function (item) {
                    if (item.displayName && item.displayName.indexOf(';') !== -1) { // Check if DisplayName is defined before extracting substring

                        var option = $('<option ' + 'title="' + item.displayName + '" ' + 'value="' + item.id + '" >').text(item.status + " - " + item.name + " - " + item.durationText + " - " + item.check);
                        
                        // Check if displayName includes "Не активен" before disabling the option
                        if (item.displayName.includes("Не активен")) {
                            option.prop('disabled', true);
                        }
                        var clonedOption = option.clone(); // Клонируем элемент
                        $("#lessonType-select").append(option);
                        $("#lessonType2-select").append(clonedOption);
                    
                    } else {
                        console.error("Missing or invalid displayName for item:", item);
                    }
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        }).then(() => {
           
        })



        //$("#lessonType-select").load("/LessonType/OptionsList", { filters: filters_LessonType, order: orders, lessonTypeId: $("#lessonType-select option:selected").val() });
    }
    GetLessonTypes();
    $(document).ready(function () {

        getStudents();
        //getCourcesNamesList();
    });

</script>