@using Microsoft.AspNetCore.Identity
@using SkillsHub.Domain.BaseModels;
@inject UserManager<ApplicationUser> _userManager;
@inject SkillsHub.Persistence.ApplicationDbContext _context;


@model ApplicationUser;

@{
    var condition = (User.IsInRole("Admin") || User.Identity.Name == Model.Login) && Model != null && Model.UserTeacher != null;
}

@if (condition)
{
    var teacher = Model.UserTeacher;

    <div class="card">
        <div class="card-body">


            <div>
                @{
                    <form style="display:flex; justify-content:space-between">
                        <input type="hidden" asp-for="@teacher.Id" value="@teacher.Id" />
                        <input type="hidden" asp-for="@teacher.ApplicationUserId" value="@Model.Id" />
                        @if (!(await _userManager.IsInRoleAsync(Model, "Teacher")))
                        {

                            <h3 style="color:dimgray">Статистика учителя - UnActive</h3>
                        }
                        else
                        {
                            <h3>Статистика учителя - Active</h3>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <input class="btn btn-primary btn-sm" type="submit" value="↑↓" asp-action="Activate" asp-controller="Teachers" asp-route-id="@teacher.Id" asp-route-userId="@Model.Id" />
                        }
                    </form>

                }

            </div>


            <div style="display:flex; justify-content:space-between">
                <b>Working schedule: </b>
                @if (teacher.WorkingDays != null)
                {
                    <ol style="padding-left:0.2%">

                        @foreach (var item in teacher.WorkingDays.Split("-"))
                        {
                            <li>@item.ToString()</li>
                        }
                    </ol>
                }
                <b></b>
                <b></b>



            </div>
            <div style="display:flex; justify-content:space-between">

                <b>Направления работы:</b> @{
                    if (teacher.PossibleCources != null)
                    {
                        var res = String.Join(',', Model.UserTeacher.PossibleCources.Select(x => x.CourseName));

                        <ol>
                            @foreach (var item in Model.UserTeacher.PossibleCources.Select(x => x.CourseName))
                            {
                                <li>@item.Name</li>
                            }
                        </ol>
                    }
                    else
                    {
                        <p>EMPTY</p>
                    }
                }

                <b></b>
                <b></b>


            </div>
            <hr />
            <div>
                @{
                    _context.Groups.ToList();
                    _context.Lessons.ToList();
                    _context.Teachers.ToList();

                    _context.ApplicationUsers.ToList();
                    var visitedLessonsCount = _context.Lessons.Where(x => x.TeacherId == Model.UserTeacher.Id).Where(x => x.IsСompleted).Count();
                    var arrivedLessonsCount = _context.Lessons.Where(x => x.TeacherId == Model.UserTeacher.Id).Count();
                }
                Проведенные уроки: @visitedLessonsCount / @arrivedLessonsCount ; Цена: @teacher.CurrentCalculatedPrice BYN / @teacher.TotalCalculatedPrice BYN
            </div>
            <div>
                Выплачено: @teacher.PaidAmount BYN 
            </div>
            <!--
            <div>
                Проведено групповых английский / индивидуальных английский / групповых программирование:
            </div>
            <div>
                Ожидаемые групповых английский / индивидуальных английский / групповых программирование:
            </div>
            -->
            
        </div>
    </div>
}
