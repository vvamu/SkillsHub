@using SkillsHub.Domain.BaseModels;

@model (ApplicationUser user,List<Group>? teacherGroups);

@{
    var us = Model.user;
    var teacherGroups = Model.teacherGroups;
}
@if (us.UserTeacher != null)
{
    <div class="card">
        <div class="card-body">
            <div style="display:flex;justify-content:space-between;margin-bottom:10px">
                <h1>Teacher groups</h1>
                <!--
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                +
                </button>
                -->
            </div>

            <br />
            <!--
            <nav class="navbar navbar-expand-lg bg-light">
            <div class="container-fluid">
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
            <a class="nav-link active" aria-current="page" name="isDel"><strong>All</strong></a>
            </li>
            <li class="nav-item">
            <a class="nav-link" aria-current="page" name="isDel">Current</a>
            </li>
            <li class="nav-item">
            <a class="nav-link" aria-current="page" name="isDel">Last</a>
            </li>
            </ul>
            </div>
            </div>
            </nav>
            -->
        </div>
    </div>


    @if (teacherGroups != null)
    {



        @if (teacherGroups != null && teacherGroups.Count > 0)
        {
            @foreach (var item in teacherGroups)
            {
                @if (item.Lessons != null)
                {
                    var countEndedLessons = item.Lessons.Where(x => x.IsСompleted).Count();
                    var countLessons = item.Lessons.Count();
                    var priceByEndedLessons = item.LessonType.TeacherPrice * countEndedLessons;
                    var priceByLessons = item.LessonType.TeacherPrice * countLessons;

                    var scheduleDays = string.Join(",", item.DaySchedules.Select(x => Enum.GetName(typeof(DayOfWeek), x.DayName)));
                    var startTimes = item.DaySchedules.Select(x => x.WorkingStartTime).ToArray();
                    var endTimes = item.DaySchedules.Select(x => x.WorkingEndTime).ToArray();

                    <div class="card">
                        <div class="card-body">
                            <div style="display:flex;justify-content:space-between">
                                <div>
                                    <h2><a asp-action="Item" asp-controller="Group" asp-route-id="@item.Id">Group @item.Name</a></h2>
                                    <p><strong>Course</strong> : @item.CourseName.Name</p>
                                    <p><strong>Lesson type</strong>: @item.LessonType.Name</p>
                                    <p>
                                        <strong>Schedule</strong> :
                                        @for (int a = 0; a < startTimes.Count(); a++)
                                        {
                                            <span>@startTimes[a].ToString() - @endTimes[a].ToString() , </span>

                                        }
                                        - @scheduleDays

                                    </p>
                                </div>
                                <div>
                                    <h6>@countEndedLessons / @countLessons lessons - @priceByEndedLessons / @priceByLessons BYN</h6>
                                </div>
                            </div>


                            <div style="display:flex;margin:20px;align-items:start;grid-gap:20px;flex-wrap:wrap">
                                @if (item.Lessons != null && item.Lessons.Count() != 0)
                                {
                                    var teacherLessons = item.Lessons;//.Where(x=>x.Teacher != null).Where(x => x.Teacher.Id == @Model.user.Id).ToList();


                                    @for (int i = 0; i < teacherLessons.Count(); i++)
                                    {
                                        <div>
                                            <div style="display:flex;justify-content:center;flex-wrap:wrap;align-items:center;grid-gap:2%">


                                                @if (teacherLessons[i].Teacher == null || teacherLessons[i].Teacher.ApplicationUser.Id != Model.user.Id)
                                                {
                                                    <div style="color:red" title="Lesson will visit another teacher;  ">@teacherLessons[i].StartTime.ToShortDateString()</div>

                                                }
                                                else
                                                {
                                                    <div title=" @teacherLessons[i].StartTime.ToShortTimeString()">@teacherLessons[i].StartTime.ToShortDateString() <br /></div>
                                                }


                                                <input type="checkbox" asp-for="@teacherLessons[i].IsСompleted" disabled />
                                            </div>
                                        </div>
                                    }

                                }
                                else
                                {
                                    <div>Group not started yet</div>
                                }
                            </div>
                        </div>

                    </div>
                }

            }
        }


        else
        {
            <div class="card">
                <div class="card-body">
                    <h3>Groups list is empty</h3>
                </div>
            </div>
        }
    }
}