@using SkillsHub.Domain.BaseModels;

@model (ApplicationUser user,List<Group>? teacherGroups,List<Lesson>? otherLessons);

@{
    var us = Model.user;
    var teacherGroups = Model.teacherGroups;
    var otherLessons = Model.otherLessons;

}
@if (us.UserTeacher != null)
{
    <div class="card">
        <div class="card-body">
            <div style="display:flex;justify-content:space-between;margin-bottom:10px">
                <h1>Teacher groups</h1>
                <!--
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                +
                </button>
                -->
            </div>

            <br />
            <!--
            <nav class="navbar navbar-expand-lg bg-light">
            <div class="container-fluid">
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
            <a class="nav-link active" aria-current="page" name="isDel"><strong>All</strong></a>
            </li>
            <li class="nav-item">
            <a class="nav-link" aria-current="page" name="isDel">Current</a>
            </li>
            <li class="nav-item">
            <a class="nav-link" aria-current="page" name="isDel">Last</a>
            </li>
            </ul>
            </div>
            </div>
            </nav>
            -->
        </div>
    </div>


    @if (teacherGroups != null)
    {



        @if (teacherGroups != null && teacherGroups.Count > 0)
        {
            @foreach (var item in teacherGroups)
            {
                @if (item.Lessons != null)
                {
                    var countEndedLessons = item.Lessons.Where(x => x.IsСompleted).Count();
                    var countLessons = item.Lessons.Count();
                    var priceByEndedLessons = item.PaymentCategory.TeacherPrice * countEndedLessons;
                    var priceByLessons = item.PaymentCategory.TeacherPrice * countLessons;

                    var scheduleDays = string.Join(",", item.DaySchedules.Select(x => Enum.GetName(typeof(DayOfWeek), x.DayName)));
                    var startTimes = item.DaySchedules.Select(x => x.WorkingStartTime).ToArray();
                    var endTimes = item.DaySchedules.Select(x => x.WorkingEndTime).ToArray();

                    <div class="card">
                        <div class="card-body">
                            <div style="display:flex;justify-content:space-between">
                                <div>
                                    <h2><a asp-action="Item" asp-controller="Group" asp-route-id="@item.Id">Group @item.Name</a></h2>           
                                    <p><strong>Lesson type</strong>: @item.Course.Name</p>
                                    <p>
                                        <strong>Schedule</strong> :
                                        @for (int a = 0; a < startTimes.Count(); a++)
                                        {
                                            <span>@startTimes[a].ToString() - @endTimes[a].ToString() , </span>

                                        }
                                        - @scheduleDays

                                    </p>
                                </div>
                                <div>
                                    <h6>@countEndedLessons / @countLessons lessons - @priceByEndedLessons / @priceByLessons BYN</h6>
                                </div>
                            </div>


                            <div style="display:flex;margin:20px;align-items:start;grid-gap:20px;flex-wrap:wrap">
                                @if (item.Lessons != null && item.Lessons.Count() != 0)
                                {
                                    var teacherLessons = item.Lessons.OrderBy(x => x.StartTime).ToArray();//.Where(x=>x.Teacher != null).Where(x => x.Teacher.Id == @Model.user.Id).ToList();


                                    @for (int i = 0; i < teacherLessons.Count(); i++)
                                    {
                                        <div>
                                            <div style="display:flex;justify-content:center;flex-wrap:wrap;align-items:center;grid-gap:2%">


                                                @if (teacherLessons[i].Teacher == null || teacherLessons[i].Teacher.Teacher.ApplicationUser.Id != Model.user.Id)
                                                {
                                                    <div style="color:red" title="Lesson will visit another teacher;  ">@teacherLessons[i].StartTime.ToShortDateString()</div>

                                                }
                                                else
                                                {
                                                    <div title=" @teacherLessons[i].StartTime.ToShortTimeString()">@teacherLessons[i].StartTime.ToShortDateString() <br /></div>
                                                }


                                                <input type="checkbox" asp-for="@teacherLessons[i].IsСompleted" disabled />
                                            </div>
                                        </div>
                                    }

                                }
                                else
                                {
                                    <div>Group not started yet</div>
                                }
                            </div>
                        </div>

                    </div>
                }

            }
        }


        else
        {
            <div class="card">
                <div class="card-body">
                    <h3>Groups list is empty</h3>
                </div>
            </div>
        }
    }
}

@if (otherLessons != null && otherLessons.Count > 0)
{
    <div class="card">
        <div class="card-body" id="lessonsList">


            <div class="col ">
                <div class="card">
                    <div class="card-body"
                         id="allLessons">
                        @foreach (var item in otherLessons)
                        {
                            @if (item != null)
                            {
                                var lessonId = item.Id;
                                var formId = "lesson" + lessonId;
                                <div class="col lessonInGroup">
                                    <form id="@formId">
                                        <div class="card">
                                            <div class="card-body">
                                                <div>
                                                    <!--HEADER LESSON-->
                                                    <div class="row">
                                                        <div class="col">
                                                            <div class="row">
                                                                <input type="hidden" asp-for="@item.Id" value="@item.Id" />
                                                                <input type="hidden" asp-for="@item.GroupId" value="@item.GroupId" />
                                                                <div style="display:flex; justify-content:space-between">
                                                                    <h5>

                                                                        <a asp-action="Item" asp-controller="Lesson" asp-route-id="@item.Id">
                                                                            @(otherLessons.IndexOf(item) + 1) . @item.StartTime.ToLongDateString() (@item.StartTime.DayOfWeek)
                                                                            @if (item.IsDeleted)
                                                                            {
                                                                                <span style="color:red">Deleted</span>
                                                                            }
                                                                            else if ((@item.EndTime < DateTime.Now) && !(item.IsСompleted))
                                                                            {
                                                                                <span style="color:red">Not completed</span>
                                                                            }
                                                                            else if (@item.IsСompleted && (@item.EndTime < DateTime.Now))
                                                                            {
                                                                                <span style="color:green">Completed</span>
                                                                            }
                                                                            else if (@item.IsСompleted)
                                                                            {
                                                                                <span style="color:greenyellow">Completed but the lesson wasn't over yet</span>
                                                                            }
                                                                        </a>
                                                                    </h5>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div style="display:flex; justify-content:space-between">
                                                                    @if (User.IsInRole("Student"))
                                                                    {
                                                                        <div style="display:flex; grid-gap:5%" class="cs-form">
                                                                            <input type="time" name="startTime" asp-for="@item.StartTime" class="form-control" disabled /> -
                                                                            <input type="time" name="endTime" asp-for="@item.EndTime" class="form-control" disabled />
                                                                        </div>
                                                                        <div></div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div style="display:flex; grid-gap:5%">
                                                                            <input type="time" asp-for="@item.StartTime" class="form-control" /> -
                                                                            <input type="time" asp-for="@item.EndTime" class="form-control" />
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <!--END HEADER LESSON-->
                                                        <div class="col">
                                                            @{
                                                                //Get variables to show teacher
                                                                ApplicationUser teacher = new ApplicationUser();
                                                                /*
                                                                List
                                                                <ApplicationUser>
                                                                arrivedUsers = new List<ApplicationUser>();
                                                                List<ApplicationUser> notArrivedUsers = new List<ApplicationUser>();

                                                                if (item.ArrivedStudents != null)
                                                                {
                                                                var users = item.ArrivedStudents.Where(x => x.IsVisit).Select(x => x.Student).Select(x => x.ApplicationUser);
                                                                arrivedUsers.AddRange(users);
                                                                var users2 = item.ArrivedStudents.Where(x => x.IsVisit == false).Select(x => x.Student).Select(x => x.ApplicationUser);
                                                                notArrivedUsers.AddRange(users2);
                                                                }*/

                                                                if (item.Teacher != null && item.Teacher.Teacher.ApplicationUser != null)
                                                                    teacher = item.Teacher.Teacher.ApplicationUser;
                                                                <div>
                                                                    <strong>Group: </strong> <a asp-action="Item" asp-controller="Group" asp-route-id="@item.Group.Id">@item.Group.Name - @item.Group.Course.Name </a> <br />
                                                                    <strong>Lesson topic: </strong>@(item.Topic ?? "-") <br />


                                                                    <strong>Teacher:</strong> <a asp-route-id="@teacher.Id" asp-action="Item" asp-controller="Account">
                                                                        @if (teacher != null)
                                                                        {
                                                                            <span> @teacher.FirstName @teacher.LastName @teacher.Surname</span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span>-</span>
                                                                        }
                                                                    </a> <br />
                                                                    <strong>Arrived students:</strong>
                                                                    @if (item.ArrivedStudents != null && item.ArrivedStudents.Count() != 0)
                                                                    {
                                                                        <ul>
                                                                            @foreach (var userr in item.ArrivedStudents.Select(x => x.Student).Select(x => x.ApplicationUser))
                                                                            {
                                                                                <li><a asp-route-id="@userr.Id" asp-action="Item" asp-controller="Account">@userr.FirstName @userr.LastName</a> </li>
                                                                            }
                                                                        </ul>
                                                                    }
                                                                    <br />
                                                                    @if (User.IsInRole("Admin"))
                                                                    {
                                                                        <p>
                                                                            Result price for student: @item.Group.PaymentCategory.StudentPrice BYN
                                                                            <br />
                                                                            Result price for teacher: @item.Group.PaymentCategory.TeacherPrice BYN
                                                                            <br />
                                                                            Result price for admin: @(item.Group.PaymentCategory.TeacherPrice - (item.Group.PaymentCategory.StudentPrice * item.ArrivedStudents.Count())) BYN
                                                                        </p>
                                                                    }
                                                                    @if (User.Identity.Name == us.Login)
                                                                    {

                                                                        <p>
                                                                            Result price for teacher: @item.Group.PaymentCategory.TeacherPrice BYN
                                                                        </p>
                                                                    }
                                                                   
                                                                </div>
                                                            }
                                                        </div>
                                                       
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            }
            <!--
                    <div style="display:flex;justify-content:space-between">
                        <div>
            <h2><a asp-action="Item" asp-controller="Group" asp-route-id="lesson.Group.Id">Group item.Name</a></h2>
                            <p><strong>Course</strong> : item.CourseName.Name</p>
                            <p><strong>Lesson type</strong>: item.LessonType.Name</p>

                -->

        </div>
    </div>
}
